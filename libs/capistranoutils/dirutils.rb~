module CapistranoUtils::Dir 


# Returns true if the remote and local versions of the filename
# have a different md5 hash value
def different_hash?(filename) 
  local_hash = `openssl dgst -md5 #{SOURCE_DIR}/#{filename} `
  remote_hash = capture( "openssl dgst -md5 #{DEST_DIR}/#{filename}" )
  local_hash.split('=')[1] != remote_hash.split('=')[1]
end

# Makes the remote destination directory contain the same files
# as the local source directory. Files that exist only in the 
# destination directory are removed.
def mirror_directory(src_dir, dest_dir)
  remote_list = capture("ls #{DEST_DIR}").split
  local_list = Dir.entries( "#{SOURCE_DIR}").select { |f| ! f.start_with?('.') }
  new_files = local_list - remote_list
  old_files = remote_list - local_list
  changed_files = (remote_list & local_list).select { |f| different_hash?(f) }
  old_files.each { |file| run "rm #{DEST_DIR}/#{file}" }
  new_files.each { |file| upload( "#{SOURCE_DIR}/#{file}", "#{DEST_DIR}/#{file}" ) }
  changed_files.each { |file| upload( "#{SOURCE_DIR}/#{file}", "#{DEST_DIR}/#{file}" ) }
end










end
